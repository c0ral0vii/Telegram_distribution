import os

from aiogram import Router, F, types
from aiogram.filters import CommandStart, StateFilter, Command
from aiogram.fsm.context import FSMContext
from aiogram.types import FSInputFile

from main_bot.keyboards.keyboards import telegram_keyboard, current_spam_keyboard
from config.config import ADMIN_PASSWORD
from main_bot.fsm import AuthUser, CurrentSpam
from models.accounts import create_auth_user, check_account
from main_bot.middlewares.middleware import AuthMiddleware


main_router = Router()

@main_router.message(CommandStart(), StateFilter(None))
async def start_message(message: types.Message, state: FSMContext):
    '''–ù–∞—á–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ - /start '''

    if not await check_account(message.from_user.id):
        await state.set_state(AuthUser.password)
        await message.reply('–û—Ç–ø—Ä–∞–≤—å –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É...')
    else:
        await state.set_state(CurrentSpam.current_spam)
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–∞–º:', reply_markup=await current_spam_keyboard())

@main_router.message(F.text, AuthUser.password)
async def login(message: types.Message, state: FSMContext):
    '''–í—Ö–æ–¥'''

    if message.text == ADMIN_PASSWORD:

        await state.clear()

        await create_auth_user(user_id=message.from_user.id)
        await message.answer('–í—ã –≤–≤–µ–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å')
        await state.set_state(CurrentSpam.current_spam)
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–∞–º:', reply_markup=await current_spam_keyboard())
    else:
        await state.set_state(AuthUser.password)
        await message.answer('–í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å')


@main_router.callback_query(F.data == 'telegram_spam', CurrentSpam.current_spam)
async def current_spam(call: types.CallbackQuery, state: FSMContext):
    await call.message.answer(f'–°–ø–∞–º –±—ã–ª –≤—ã–±—Ä–∞–Ω - üëëTGüëë', reply_markup=await telegram_keyboard())

@main_router.message(F.text == '–ò–∑–º–µ–Ω–∏—Ç—å —Å–ø–∞–º', CurrentSpam.current_spam)
async def change_spam(message: types.Message, state: FSMContext):
    '''–í—ã–±–æ—Ä —Å–ø–∞–º–∞'''

    await state.set_state(CurrentSpam.current_spam)
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–∞–º:', reply_markup=await current_spam_keyboard())


@main_router.message(F.text == 'üìâ–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞üìâ', CurrentSpam.current_spam)
async def telegram_stats(message: types.Message, state: FSMContext):
    '''–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'''

    await message.answer('üî¥–°–ø–∏—Å–æ–∫ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –ø—É—Å—Çüî¥')


@main_router.message(F.text == 'üëÜ–ù–∞—á–∞—Ç—å —Å–ø–∞–ºüëÜ', CurrentSpam.current_spam)
async def start_spam(message: types.Message, state: FSMContext):
    '''–ó–∞–ø—É—Å–∫ —Å–ø–∞–º–∞'''

    await message.answer('üî¥–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∞–∫–∫–∞—É–Ω—Ç—ã, –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–ø–∞–º..üî¥')


@main_router.message(F.text == '–¢–µ–∫—É—â–∏–π —Å–ø–∞–º', CurrentSpam.current_spam)
async def check_spam(message: types.Message, state: FSMContext):
    '''–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø—É—â–µ–Ω–æ–≥–æ —Å–ø–∞–º–∞'''

    await message.answer(f'üî¥–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∏ –æ–¥–∏–Ω —Å–ø–∞–º –Ω–µ –∑–∞–ø—É—â–µ–Ω..üî¥')